[ CSS에서 애니메이션 구현하기 : animation ]

  ★ animation: 이시이지반방마 
                (이름 시간 이징 지연 반복 방향 마지막상태)
_______________________________________________________________________________________________________ 

  - html요소의 변화를 키프레임(장면)에 주고 이를 호출하여
    브라우저에서 애니메이션이 연출 될 수 있게 하는 CSS 구현기술 (키프레임/정교함)

  - 시간에 따라 CSS설정을 변경하여 애니메이션을 하도록
    키프레임을 설정하고 이것을 호출함으로 의도된 연출을 
    구현하는 것이 'CSS 애니메이션' 이다!

  - 키프레임 모션 상세 움직임
_______________________________________________________________________________________________________ 

  [ 키프레임이란? ]
    - 애니메이션 변화를 지정하는 코딩영역
  -----------------------------------------------------------------------------------------------------
  
  [ 2장면 코딩법 ]

    @keyframes 키프레임명{
        from{시작CSS}
        to{마지막CSS}
    }
  -----------------------------------------------------------------------------------------------------
  
  [ 여러장면 코딩법 ]
    - 퍼센트로 장면을 분할하여 사용함 (무한대의 장면 연출가능)

    @keyframes 키프레임명{
        0%{CSS설정}
        10%{CSS설정}
        20%{CSS설정}
        ...
        90%{CSS설정}
        100%{CSS설정}
    }
_______________________________________________________________________________________________________ 

  [ 설정된 키프레임 호출하는 방법 ]
    ★ animation: 이시이지반방마;
                  (이름 시간 이징 지연 반복 방향 마지막상태)

    1) 이름(animation-name) : keyframe 이름
    2) 시간(animation-duration) : 애니메이션 동작시간(초단위:s)(0.5→.5s)
    3) 이징(animation-timing-function) : easing 가속도 
    4) 지연(animation-delay) : 애니메이션 시작지연시간(초단위:s)
    5) 반복여부(animation-iteration-count) : 애니메이션 반복횟수 
                                            - 기본값 1, 숫자를 쓰면 반복횟수
                                            - 영원히는 infinite (인피니트)
    6) 방향(animation-direction) : 시작 -> 끝
                                   - 대체경로 설정하기 : alternate (시작 → 끝, 끝 → 시작)
                                   - 대체경로는 반복횟수가 2이상 또는 infinite 이여야함
    7) 마지막상태(animation-fill-mode) : 애니메이션이 끝났을 때
                                        - 처음으로 돌아가는 것이 기본!
                                        - 마지막상태를 유지하고 싶을 때 
                                          : forwards(앞쪽에... 즉, 애니끝장면)

_______________________________________________________________________________________________________ 

  [ 애니메이션 키프레임 만들기 - 하는 순서 ]
            
    1) 먼저 키프레임 설정 : <style>태그 안에 함
        
        @keyframes logoAni { "logoAni" 내가 이름 지음 
            from{  시작설정 - 처음값이 CSS원본과 같으면 생략! - 일치시키는것이 일반적
                  top: calc(50% - 100px);
                  left: calc(50% - 100px);
                }
            to{  끝설정 - from(처음에서) to(끝으로 간다.)
                top: 50px;
                left: 50px;
                }    
            } -> 여기서 절대 마지막 괄호 잊지 말 것!


      ex) ※ 2개 줄수 있음
      @keyframes logoAni { /* "logoAni" 내가 이름 지음 */
        from{ 
          top: calc(50% - 100px);
          left: calc(50% - 100px);
        }
        to{ 
          top: 50px;
          left: 50px;
        }           
      }

      @keyframes logoAni2 {
        from{
          transform: rotate(30deg);
        }            
        to{
          transform: rotate(-30deg);
        }
      }          
  -----------------------------------------------------------------------------------------------------

    2) 애니메이션 주어야할 태그영역에 넣기
        
        ★ 애니메이션: 이시이지반방마
        animation: logoAni 2s ease-in-out 1s forwards;

        ex) 1번에서 설정한 키프레임 적용할 부분에 호출!
        h1#logo {animation: logoAni 2s ease-in-out 1s forwards, 
                            logoAni2 1s ease-in-out 3s infinite
                            alternate;
        }
_______________________________________________________________________________________________________ 

    [ 애니메이션 키프레임 만들기 ]

    1. 두장면 키프레임

    @keyframes 키프레임이름 {
        from{시작 CSS설정}
        to{끝나는 CSS설정}
    }       
    _________________________ or _________________________

    @keyframes 키프레임이름 {
        0%{시작 CSS설정}
        100%{끝나는 CSS설정}
    }

    -> 만약 from설정과 초기설정이 같다면 from은 생략가능!
        (시작점을 애초에 설정해놨다면 마지막 장면만 주면 된다.)

    _______________________________________________________  

    2. 여러장면 키프레임

      @keyframes 키프레임이름 {
        0%{CSS설정}
        10%{CSS설정}
        20%{CSS설정}
        ...
        90%{CSS설정}
        100%{CSS설정}
    }

    -> 장면에 대한 시간 계산은? 
        전체시간 * %소수점변경수치
        
        - 전체시간은 호출시 설정함!
        - %소수점 변경 수치는 몇%/100
          ex) 50%는 0.5(소수점 2자리 이동!)

_______________________________________________________________________________________________________ 



[ CSS 애니메이션 수정 툴 사용하기 ]
______________________________________________________

1. 크롬 animation 인스펙터

(개발자모드 F12 or Ctrl+Shift+I 
설정메뉴>More tools>Animation 으로 꺼내야함)

- 장점: 
1) 애니메이션 흐름파악(시간이동,멈춤자유)
2) 시간조정
3) 애니메이션을 멈춤 상태에서 특정 프레임의 속성을 변경후
애니메이션을 계속 플레이할 경우 변경이 반영된 애니메이션을 
확인할 수 있다.

- 단점:(비주얼 프레임 모드에서의 단점)
1) 각 키프레임별 변경 미리보기 안됨
2) 전체 시간 변경시 호출 설정이 상이하게 변함
3) 드래그로 전체시간,시작,끝시간 변경은 되나
   중간 텀 변경시 코드 반영이 안됨
3) %로 표시안되고 시간으로 표시돼서 가늠이 어려움
4) 이징 선택 조정이 불편함
_________________________________________________________

2. 파이어폭스 animation 인스펙터

(개발자모드에 나와있음)

- 장점:
1) 애니메이션 흐름파악(시간이동,멈춤자유)
2) 각 키프레임별 변경 미리보기 됨
3) 호출 변경시(이징변경) 표기법이 그대로임
4) %로 표시돼서 가늠이 쉬움
5) 이징 선택조정이 편함
- 단점: 
1) 드래그로 전체 시간조정 안됨

