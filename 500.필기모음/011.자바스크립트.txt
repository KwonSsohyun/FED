[ 자바스크립트 ]

  [ 자바스크립트는 왜 하나? ]
    → html을 변경하려고!
    → JS에서 제일 중요한 것은 웹문서
    → 웹문서 === document
_______________________________________________________________________________________________________ 

  [ 자바스크립트 기본기 ]

    ★ function 함수이름(전달변수){///코드///;}
      → 전달할 값을 전달변수에 담는다!


    ✓ 바로 실행되지 않고, HTML 이벤트 속성에서 호출할 때 실행됨
      → 코드를 저장하여 호출시에만 실행하는 것 = 함수! -> 영어로 function
      → function은 키워드로 반드시 써야함!
      → 함수이름은 쉽게 말하면 전화받는 사람!


    ✓ 함수형식 ->> function 함수명(전달변수){코드;}
               ->> 함수는 영어로 function
               ->> 함수는 호출시 : 함수명()
               ->> (전달변수) : 내가 이름 짓기(따옴표 절대 싸면 안됨!!!)
               ->> {코드구역} ----> 함수!
               ->> 전달할 값을 전달변수에 담는다!

               
    [ DOM으로 JS선택하기! ]
      Document Object Model -> 돔!
      -> html의 구조를 따라 요소를 선택하는 방법(기술)
      -> 웹페이지 지도 or 네비게이션

      ★ 돔의 아버지 ->>>>> document
      'Document'는 웹문서의 최상위 객체!

      접근법 ->> DOM으로 JS선택하기! 
             ->> 우주.우리은하.태양계.지구.대한민국.서울.강남구.테헤란로.119번지 
             ->> 점.......은 하위구성요소로 들어가는 문이다!
             ->> ★ . → 점은 선택해서 들어가는 것

             ->> ★ 이퀄(=)은 같다는 뜻이 아니고, 오른쪽값이 왼쪽으로 들어감! (할당!)

             ->> ★ JS 명령문은 끝날때 '세미콜론'해준다!(;) 
                   사실 브라우저는 ASI(Auto Semicolon Insertion : 자동세미콜론 넣기)를 해주지만,
                   문제가 발생할 수 있으므로 개발자가 직접해주는 것이 정석이다!!!

             ->> ★ (괄호안에 쓸때) 꼭! 따옴표로 안 싼다! (전달변수)
                 ★ 안싸면 스크립트코드 안에 쓰는 변수!
                    ※ 싸면 Html에 쓰는 문자값!

    ---------------------------------------------------------------------------------------------------

    [ JS코딩 ]   
      ★ function 함수이름(전달변수){///코드///;}

      ✓ 전달변수 (내가 이름 짓기) 
        - 전달변수는 함수 호출시 보내는 값을 담아놓는 메모리 공간의 이름!
        - ★ 괄호 안에 따옴표로 싸면 안됨!!! (그것마저도 이름으로 인식하기 때문)
             예시 (yo)
     

    [ Html 코딩 : 이벤트 속성 사용법]  
      ★ 구성: <태그명 이벤트속성="함수이름(' ')">
         → 값에서 JS코드를 사용할 수 있다!
         → 값에서 함수호출을 할 수 있다.
         → 값을 적어서 자바스크립트랑 연결하는 것
         → 함수호출시 보내는 문자값은 반드시!!! ('따옴표로 싼다')
         → 겉이 쌍따옴표면! 안은 홑따옴표!
         → 이벤트속성 셋팅을 JS코딩구역에서만 할 수도 있다.
           (주로 이방법 씀 : 소스가 분리되기 때문 / 코드관리 용이)

      ★ 이벤트속성
         → on+이벤트명으로 이름 지어짐
           onclick, ondblclick, onmouseover, onkeypress, onload 등

         ✓ 함수의 호출은 요소(태그)의 이벤트 속성과 연결하여 가능하다!
         ✓ 각 이벤트가 발생할 때를 알려주는 특성이 있다. 



    예시 - JS코딩구역 (인터널방식))
           <script>
              function yogi(gab){  ▶ gab 넘어오는 값

                document  ▶ 전체문서 소환!
                .getElementsByClassName("gnb")  ▶ 클래스요소 선택
                .item(0)  ▶ 클래스중 첫 번째(0부터 시작)
                .style  ▶ 스타일시트 설정
                .top  ▶ top값 설정
                = gab;  ▶ 전달변수(파라미터)로 값을 셋팅 / (=)오른쪽값이 왼쪽으로 들어감!(할당!) ;
              
              }
            </script>

           --------------------------------------------------------------------------------------------
 
           <script>
              function gogo(yo){ 
                
                document.getElementById("tg").src = "https://www.youtube.com/embed/"+
                yo+
                "?autoplay=1&start=1&end=30;&loop=1&playlist="+
                yo;

              }
           </script>

_______________________________________________________________________________________________________ 

  [ ★ 자바스크립트 하는 법 ]

    1) <head> //// </head> 사이에
       "<script> </script>"를 쓴다.


    2) [ 함수 호출확인 + 전달값 확인 ▶ alert() ]

        ① <script> //// </script> 사이에 작성을 해준다.
           
           function gogo(yo){ 
                alert(yo)
           }

        ------------------------------------------------------------------------------------------------

        ② HTML영역 <body> 안에 적용할 섹션으로 가서 작성을 해준다.

          <nav class="mlist">
            <ul>
              <li> 
                <a href="#" onclick="gogo('테스트')"><img src="./images/m1.jpg" alt="비와 당신의 이야기"></a>
              </li>

            값을 호출할 문자값 적어야 하는 곳에 출력이 잘되는지 테스트를 하는 것이라 
            ▶ onclick="gogo('테스트')  →  입력

        ------------------------------------------------------------------------------------------------

        ③ 브라우저 창 열어서 팝업창 나오는지 확인했으면 호출이 잘 되는 것이니 
          alert(yo) → 주석처리!



    3) [ ★ 대상선정 변경사항 적용 : 여기서부터 진짜 적용이니 세부적으로 잡는다.]

         [ 변경요구사항 ]     
           : 전달된 동영상 아이디값을 아이프레임의 src속성값으로 넣어준다! 
           : 기대되는 변경사항 -> 동영상이 바꿔서 play!
           : 변경 원하는 html 대상 
             <iframe> → #tg (ID태그는 고유이름 하나니까 id로 html에서 잡아줌)

        ------------------------------------------------------------------------------------------------

         - '대상선정'이란?
           → 변경할 구역 선택 돔으로 선택 

         - '변경사항'이란?
            → Html, Css에서 변경

        ------------------------------------------------------------------------------------------------ 

            [ 1. 대상선정 ] 
                 → 변경할 구역 선택 돔으로 선택 (DOM으로 JS선택하기!)         

           <script> //// </script> 사이에 작성한
            function gogo(yo){////} 안에 작성
           ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼

            function gogo(yo){  
                document.getElementById("tg").src = "https://www.youtube.com/embed/"+
                yo+
                "?autoplay=1&start=1&end=30;&loop=1&playlist="+
                yo;
            }
           ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
           ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
            [ 코드 풀이 ]

            ▶ document.getElementById("tg").src  

               → function gogo(yo){////} 안에 작성
               → 이것이 대상선정 (Dom 돔)               
               → Html 세부적으로 어디에 위치해 있는걸 .을 찍으면서 들어가면서 정확하게 픽해준다.
               → 다음줄 쓰고 싶으면 (다음줄) .____ (다음줄)

               → ★ ("tg") : html에서 id이름은 하나만 줄 수 있으니 아이디 준 이름 그대로 자바스크립트로 불러준다.
               → .src : 유투브 경로를 변경할거니 최종적 도착지로 언급해준다.


            ▶ 선정했으면 이제 어떻게 할건지 할당해야한다.

               → Html에서 지정한 유투브 설정을 보면 이와 같이 코드가 적혀져 있다.
                 <div id="screen">
                    <iframe id="tg" src="https://www.youtube.com/embed/2hnkUpo_2yg?autoplay=1&start=1&end=30;&loop=1&playlist=2hnkUpo_2yg" allow="autoplay"></iframe>

                 ▶ 여기서 주목하고 쓸 부분은 src뒤에 링크 부분
                    https://www.youtube.com/embed/2hnkUpo_2yg?autoplay=1&start=1&end=30;&loop=1&playlist=2hnkUpo_2yg

                    ->> '2hnkUpo_2yg'는 영상의 고유이름이다.
                    ->> 그래서 링크 끝에 보면 "&playlist=2hnkUpo_2yg" -> 동영상 고유이름이라고 알려주는 것.
                         ex) https://www.youtube.com/watch?v="Dt5hFexM5BI" → = 뒤에가 영상의 고유이름
                    
                    [ URL 파라미터 : url주소'?키=값&키=값&키=값'..]
                    : 해당동영상 링크에 이런 설정값이 적용되어 있는 것
                    ->> '?autoplay=1'-> 자동플레이
                    ->> '&start=1&end=30;' -> 1초에 시작해서 30초에 끝나게 해줘
                    ->> '&loop=1' -> 반복재생
                
            ▶ 도출
              : 영상의 고유이름만 다른 영상 넣을 다른 동영상 고유 이름으로 바꿔주면, 
                파라미터 설정된 것이 그대로 적용되 보일 수 있다는 것.  

              -> 아까 대상선정한 document.getElementById("tg").src =(이퀄)을 뒤에 붙혀주고
                 Html에 src링크를 그대로 붙히고 수정을 해준다.

              ->> "https://www.youtube.com/embed/"
                   2hnkUpo_2yg 
                  "?autoplay=1&start=1&end=30;&loop=1&playlist="
                   2hnkUpo_2yg"; 
                  --------------------------------------------------------------------------------------
                    작성한 뒤 
                    "2hnkUpo_2yg" 유투브 링크주소 영상 고유값이니,
                    영상 다르게 다 설정할거니 값을 변경해줄거니까 
                    고유값을 지우고 
                    ->> yo라는 변수로 바꿈

                  --------------------------------------------------------------------------------------

                ▶ 기존값에 'yo'라는 변수에 담긴 동영상 아이디값을 합쳐서 src값에 할당한다!!!
                   (+ 를 쓰는 이유는 문자끼리 붙힐 수 있기 때문)
                    
            ★ 도출결과  
               "https://www.youtube.com/embed/"+
                yo+
               "?autoplay=1&start=1&end=30;&loop=1&playlist="+
                yo;
           ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
        ------------------------------------------------------------------------------------------------ 

            [ 2. 변경사항 ]  
                 → 적용되어야 할 Html 혹은 Css에서 변경  

                 ★ 변경 원하는 html 대상 
                    <iframe> → #tg (ID태그는 고유이름 하나니까 id로 html에서 잡아줌)

                 ★ 함수호출시 보내는 문자값은 반드시!!!('따옴표로 싼다') 그래야 문자값이다! 
                    - 겉이 쌍따옴표면! 안은 홑따옴표!

             내가 변경적용할 곳은 HTML의 <main>안에
             유투브 영상이 교체적용될 곳의 영역으로 가서 
           ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼

            <nav class="mlist">
              <ul>
                <li> 
                    <a href="#" onclick="gogo('p6j5IqJw5Ck')"><img src="./images/m1.jpg" alt="비와 당신의 이야기"></a>
                </li>

           ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
           ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
             [ 코드 풀이 ]      
                            
               내가 변경할 곳은 HTML의 <main>안에 가보면
               <nav class="mlist">
                 <ul>
                   <li> 
                     <a href="#" onclick="gogo('비와 당신의 이야기')"><img src="./images/m1.jpg" alt="비와 당신의 이야기"></a>
                   </li>

               이렇게 작성되어있는걸 볼 수 있다.

               ▶ <a href="#" onclick="gogo('비와 당신의 이야기')">
               ▶ ('비와 당신의 이야기') 을 바꿔준다.
               ▶ 유투브 해당영상 찾아서 url맨 뒤에 = 뒤에인 영상고유이름값을 작성해 준다.
                  ex) https://www.youtube.com/watch?v="Dt5hFexM5BI" → = 뒤에가 영상의 고유이름

               ★ 도출결과
                  <a href="#" onclick="gogo('p6j5IqJw5Ck')">

_______________________________________________________________________________________________________               

