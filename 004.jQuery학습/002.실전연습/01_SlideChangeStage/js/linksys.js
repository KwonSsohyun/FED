// GNB 링크 이동 셋팅하기 - linksys.js //

/* 
   원페이지 이므로 GNB 메뉴는 한 페이지 안에서 
   페이지의 위치 이동을 애니메이션 한다!
   동시에 페이지 위치 표시자를 사용하여 
   페이지의 현재위치를 표시해 준다 (인디케이트)
   현재 페이지에 해당하는 GNB는 클래스를 사용하여 
   마우스오버시와 동일한 디자인을 준다!  
*/

////////////////////////////// 제이쿼리 로드구역 ////////////////////////////////
$(function () { //////// jQB (제이쿼리 코드블록) //////////////////

    // 대상: .gnb a
    $(".gnb a").click(function (e) {

        // 1. 기본이동막기 (맨 위로 올라오는것 제거함)
        e.preventDefault();

        // 2. 클릭된 a의 부모 li의 순번 알아내기
        //    index() 메서드 사용! >> 선택요소의 순번을 리턴!
        let idx = $(this).parent().index(); /* 현재 this만 적으면, a만(개개인)이라서 0만 나옴 ▶ 그래서 a의 부모를 잡아주려고, .parent() 를 쓴다.(0부터 센다)  */
        /* 
            parent() 메서드는 a요소의 부모인 li로 올라간다. 
            li는 순번이 0부터 읽어옴!
        */

        console.log("메뉴클릭!"+idx);


        /*  ★★★★★★★★★★★★★★★★★★★★★
            페이징 이동을 위한 페이지번호(pno)는 
            메뉴 클릭시의 순번인 idx와 같다!!!!!
            그래서 pno에 idx를 할당함! (이걸했기에 아래가 된다! 메뉴 누르면 그 해당 슬라이드 화면이 보인다.)
        */
        pno = idx; /* 변수가 들어가는것이 아니라 참조한 값이 들어간것이다. pno 0 이고 idx가 3이면 -> pno가 3이된다.(idx값이 이동) */

        
        /////////////////////////////////////////////////////
        // 3. 전체 윈도우(window)화면 높이값 단위로 이동위치 만들기 ///////////
        ///////////////////////////////////////////////////
        /* 
            .page의 top값으로 구하면 되지만
            새로운 버전의 제이쿼리에서 씽크 불일치가 발생! (하나씩 밀림!)

            ▷ let pos = $(".page").eq(pno).offset().top;  
               ->> offset().top은 현재 선택요소의 top위치값
               기존에 이렇게 적었던걸 변경해준다. 
               : 왜 변경하나요?
                 하나씩 밀려서요!!! ▷ 이것을 버그 사항을 아래의 코드로 변경해준다!

            ▶ let pos = $(window).height()*pno;
               아까 css에서 보이는 화면에 맞췄기 때문에 100%였기 때문에
               보이는 화면 값(윈도우) 높이값 을 구해오고, 
               거기에 pno는 각각의 페이지 번호니까

               보이는 화면에 (곱하기 0을 = pno) 하면 1번째 페이지일꺼고
               보이는 화면에 (곱하기 1을 = pno) 하면 2번째 페이지일꺼고 ... 
               이걸 활용한것임
        */
               let pos = $(window).height() * pno;  
               // $(window).height() 윈도우 높이값
       
               console.log("이동위치:"+pos);
       
       
               /////////////////////////////////////////////////////
               // 4. 실제 위치로 페이지 이동하기 ////////////////////
               ///////////////////////////////////////////////////
               // 전체 스크롤 이동대상 : html,body 
               //                      ->> 두개 다 잡는게 브라우저 공통임!!!
               $("html,body").animate({
                   scrollTop: pos + "px"
               }, 800, "easeInOutQuint"); /* easeInOutQuint : 이징 가속도 */


               /////////////////////////////////////////////////////
               // 5. 현재 페이지에 해당하는 메뉴에 클래스 on 넣기!
               ///////////////////////////////////////////////////
               // 대상 : .gnb li
               //        해당 li에 클래스를 넣으면 css에서 셋팅된 디자인 적용
               $(this).parent().addClass("on")
               .siblings().removeClass("on");  /* 다른 li 형제들 class 제거!!!! 
               (시블링스 안적었으면 다 li가 눌려져서 보이는데 나는 하나만 보이고 나머지는 안보이게 하고 싶으니까) 
               .siblings() 붙히고 그 뒤에 .removeClass("on")

               선택자가 바뀐거임
               $(this).parent() 의 선택자가 .addClass("on") 먹은거고 ->> li에 클래스 on이 붙은거고
               .siblings() 의 선택자가 .removeClass("on") 먹은거다 ->> 선택한 나머지가(시블링) 클래스 on 리무브 된다.
               */
    

    }); ///////////// click ///////////
    ///////////////////////////////////





}); //////////////// jQB //////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////